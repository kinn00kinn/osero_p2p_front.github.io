/* 色の変数を定義 (ダークモード対応の準備も) */
:root {
    --primary-color: #007bff;
    --primary-hover: #0056b3;
    --board-bg: #2a8b2a;
    --board-border: #2f2f2f;
    --stone-shadow: rgba(0, 0, 0, 0.3);
    --bg-light: #f4f7f6;
    --text-dark: #333;
    --card-bg: #ffffff;
    --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    --focus-ring: rgba(0, 123, 255, 0.25);
}

/* 基本設定とリセット */
*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    font-family: 'Nunito', sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: var(--bg-light);
    color: var(--text-dark);
    padding: 1rem;
    margin: 0;
    min-height: 100vh;
}

/* レイアウトコンテナ */
main {
    width: 100%;
    max-width: 600px; /* 全体の最大幅を設定 */
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* 見出し */
h1 {
    color: var(--text-dark);
    margin: 0 0 1rem 0;
    text-align: center;
}

/* カードスタイルのセクション */
.connection-area, .game-area {
    background-color: var(--card-bg);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: var(--card-shadow);
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.connection-area {
    flex-direction: row; /* PCでは横並び */
    flex-wrap: wrap; /* 折り返しを許可 */
    justify-content: space-between;
    align-items: center;
}

/* フォーム要素 */
input, button {
    padding: 0.75rem 1rem;
    border-radius: 8px;
    border: 1px solid #ccc;
    font-size: 1rem;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

input:focus-visible, button:focus-visible {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 4px var(--focus-ring);
    outline: none;
}

button {
    cursor: pointer;
    background-color: var(--primary-color);
    color: white;
    border: none;
    font-weight: bold;
    transition: background-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
}

button:hover:not(:disabled) {
    background-color: var(--primary-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

#my-id {
    color: var(--primary-color);
    background-color: #e9f5ff;
    padding: 0.25rem 0.5rem;
    border-radius: 6px;
    font-weight: bold;
    user-select: all;
}

/* ゲーム情報表示 */
#status-display, #turn-display {
    text-align: center;
    font-size: 1.2em;
    font-weight: bold;
    min-height: 1.5em;
}

/* オセロ盤 */
#board {
    border-collapse: collapse;
    background-color: var(--board-bg);
    border: 3px solid var(--board-border);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    width: 100%;
    aspect-ratio: 1 / 1; /* 常に正方形を維持 */
}

td {
    width: 12.5%;
    height: 12.5%;
    border: 1px solid rgba(0, 0, 0, 0.2);
    position: relative;
    cursor: pointer;
}

td.valid-move:hover::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70%;
    height: 70%;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3);
}

/* 石のスタイル */
.stone {
    display: block;
    position: absolute;       /* 親(td)を基準に中央配置 */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
    border-radius: 50%;
    box-shadow:
        inset 0 -3px 5px var(--stone-shadow),
        0 2px 6px rgba(0,0,0,0.45);
    transition: transform .2s ease;
    will-change: transform;
    /* 重要: クリックが下の td に届くようにする */
    pointer-events: none;
    z-index: 1;
}

/* valid-move のホバー表示（疑似要素がクリックを奪わないように） */
td.valid-move::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70%;
    height: 70%;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3);

    /* これを入れると ::before がクリックをブロックしない */
    pointer-events: none;
    z-index: 2; /* 見た目は上に */
}

/* より限定的なセレクタで競合回避 */
.stone.black {
    background-color: #000; /* fallback */
    background-image: radial-gradient(circle at 30% 30%, #4c4c4c, #000);
    /* 黒は明るいハイライトを弱く入れると見やすい */
    border: 1px solid rgba(255,255,255,0.03);
}

.stone.white {
    background-color: #fff; /* fallback を白に変更（元は #e0e0e0） */
    background-image: radial-gradient(circle at 30% 30%, #fff, #e0e0e0);
    /* 白石を背景と区別するために薄い縁取りを追加 */
    border: 1px solid rgba(0,0,0,0.12);
    box-shadow:
        inset 0 -3px 6px rgba(0,0,0,0.12),
        0 2px 6px rgba(0,0,0,0.35);
}

/* アニメーション（位置が絶対配置になったので transform を使う）*/
.stone.placed { animation-name: pop-in; }
.stone.flipping { animation-name: flip; }

@keyframes pop-in {
    from { transform: translate(-50%, -50%) scale(0); opacity: 0; }
    to { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}
@keyframes flip {
    0% { transform: translate(-50%, -50%) scaleX(1); }
    50% { transform: translate(-50%, -50%) scaleX(0); }
    100% { transform: translate(-50%, -50%) scaleX(1); }
}

/* アクセシビリティ: スクリーンリーダー用の非表示クラス */
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

/* レスポンシブ対応: 画面幅が600px以下のスタイル */
@media (max-width: 600px) {
    body {
        padding: 0.5rem;
    }
    
    .connection-area {
        flex-direction: column;
        align-items: stretch;
        gap: 1rem;
    }

    .connection-area > div {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        width: 100%;
    }

    input, button {
        width: 100%;
    }

    .game-area {
        padding: 1rem;
    }
}

